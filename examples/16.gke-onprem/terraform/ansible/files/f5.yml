- name: Licensing F5
  hosts: nsvm
  tags:
    - config_f5
  gather_facts: true
  tasks:
    - wait_for:
        port: 22
        host: '{{ inventory_hostname }}'
      delegate_to: localhost

    - name: Wait for F5 to come alive and get token
      uri:
        url: https://{{ f5_addr }}/mgmt/shared/authn/login
        method: POST
        body_format: json
        body:
          username: '{{ f5_user }}'
          password: '{{ f5_pass }}'
          needsToken: true
        return_content: yes
        validate_certs: no
      register: token
      until: token.status == 200
      retries: 6
      delay: 60
      tags:
        - f5license
        - f5partition
        - debug

    - name: Activate license
      uri:
        url: https://{{ f5_addr }}/mgmt/tm/shared/licensing/activation
        method: POST
        headers:
          X-F5-Auth-Token: '{{ token.json.token.token }}'
        body_format: json
        body:
          baseRegKey: '{{ f5_key }}'
          isAutomaticActivation: "true"
        return_content: yes
        validate_certs: no
      tags:
        - f5license

    - name: Get licensing initial status
      uri:
        url: https://{{ f5_addr }}/mgmt/tm/shared/licensing/activation
        method: GET
        headers:
          X-F5-Auth-Token: '{{ token.json.token.token }}'
        return_content: yes
        validate_certs: no
      register: initial_status
      until: initial_status.json.status != "LICENSING_ACTIVATION_IN_PROGRESS"
      retries: 120
      delay: 5
      tags:
        - f5license

    - name: Get EULA
      when: initial_status.json.status == "NEED_EULA_ACCEPT"
      uri:
        url: https://{{ f5_addr }}/mgmt/tm/shared/licensing/activation
        method: GET
        headers:
          X-F5-Auth-Token: '{{ token.json.token.token }}'
        return_content: yes
        validate_certs: no
      register: eula
      tags:
        - f5license

    - name: initial eula
      debug:
        msg: '{{ eula }}'
      tags:
        - f5license

    - name: Submit EULA
      when: initial_status.json.status == "NEED_EULA_ACCEPT"
      uri:
        url: https://{{ f5_addr }}/mgmt/tm/shared/licensing/activation
        method: POST
        headers:
          X-F5-Auth-Token: '{{ token.json.token.token }}'
        body_format: json
        body:
          baseRegKey: '{{ f5_key }}'
          isAutomaticActivation: true
          eulaText: '{{ eula.json.eulaText }}'
        return_content: yes
        validate_certs: no
      tags:
        - f5license

    - name: Get licensing complete status
      uri:
        url: https://{{ f5_addr }}/mgmt/tm/shared/licensing/activation
        method: GET
        headers:
          X-F5-Auth-Token: '{{ token.json.token.token }}'
        return_content: yes
        validate_certs: no
      register: eula_status
      until: eula_status.json.status == "LICENSING_COMPLETE"
      retries: 120
      delay: 5
      tags:
        - f5license

    - name: Get license to install
      uri:
        url: https://{{ f5_addr }}/mgmt/tm/shared/licensing/activation
        method: GET
        headers:
          X-F5-Auth-Token: '{{ token.json.token.token }}'
        return_content: yes
        validate_certs: no
      register: license
      tags:
        - f5license

    - name: Install license
      uri:
        url: https://{{ f5_addr }}/mgmt/tm/shared/licensing/registration
        method: PUT
        headers:
          X-F5-Auth-Token: '{{ token.json.token.token }}'
        body_format: json
        body:
          licenseText: '{{ license.json.licenseText }}'
        return_content: yes
        validate_certs: no
      tags:
        - f5license

    - name: pause to allow the license to be loaded
      pause:
      minutes: 2

    - name: Create f5 admin partition
      uri:
        url: https://{{ f5_addr }}/mgmt/tm/sys/folder
        method: POST
        headers:
          X-F5-Auth-Token: '{{ token.json.token.token }}'
        body_format: json
        body:
          subPath: '/'
          fullPath: '/admin-cluster'
          name: 'admin-cluster'
        return_content: yes
        validate_certs: no
      tags:
        - f5license
        - f5partition

    - name: Create f5 user partition
      uri:
        url: https://{{ f5_addr }}/mgmt/tm/sys/folder
        method: POST
        headers:
          X-F5-Auth-Token: '{{ token.json.token.token }}'
        body_format: json
        body:
          subPath: '/'
          fullPath: '/user-cluster1'
          name: 'user-cluster1'
        return_content: yes
        validate_certs: no
      tags:
        - f5license
        - f5partition